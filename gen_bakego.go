// Code generated by github.com/kybin/bakego. DO NOT EDIT.
package main

import (
	"bufio"
	"os"
	"path/filepath"
)

type BakeGoFile struct {
	fname string
	data []byte
}

type BakeGo []BakeGoFile

// Extract extracts all remebered files.
func (b BakeGo) Extract() error {
	for _, s := range b {
		fname := s.fname
		data := s.data
		err := os.MkdirAll(filepath.Dir(fname), 0644)
		if err != nil {
			return err
		}
		f, err := os.Create(fname)
		if err != nil {
			return err
		}
		w := bufio.NewWriter(f)
		_, err = w.Write(data)
		if err != nil {
			return err
		}
		w.Flush()
	}
	return nil
}

// Ensure checks all the BakeGo files are exist.
// It will return nil if all files are exist or return error.
//
// It does not check the files are modified or not.
func (b BakeGo) Ensure() error {
	for _, s := range b {
		_, err := os.Stat(s.fname)
		if err != nil {
			return err
		}
	}
	return nil
}

var bakego BakeGo = make([]BakeGoFile, 0)

func init() {
	bakego = append(bakego, BakeGoFile{"edit.html", []byte(`<h1>Editing {{.Title}}</h1>

<p>[<a href="/view/{{.Title}}">view</a>]</p>

<form action="/save/{{.Title}}" method="POST">
	<div><textarea name="body" rows="20" cols="80">{{printf "%s" .Body}}</textarea></div>
	<div><input type="submit" value="Save"></div>
</form>
`)})
	bakego = append(bakego, BakeGoFile{"history.html", []byte(`<h1>{{.Title}}</h1>

<p>[<a href="/view/{{.Title}}">view</a>]</p>

{{range .Revs}}
	<p><a href="/view/{{$.Title}}?rev={{.Num}}">Rev: {{.Num}}, Created: {{.Created}}, Author: {{.Author}}</a></p>
{{end}}

`)})
	bakego = append(bakego, BakeGoFile{"view.html", []byte(`<!DOCTYPE html>
<html>
<style>
body {
    margin: 0px;
    padding: 0px;
}
table {
    border-collapse: collapse;
}
table, th, td {
    border: 1px solid gray;
    padding: 5px 10px;
}
pre {
    background-color: #fdfdfd;
    padding: 5px;
    border-style: solid;
    border-radius: 2px;
    border-width: 1px;
    border-color: #dddddd;
}
#header {
    width: 100%;
    background-color: #fdfdfd;
    border-style: solid;
    border-width: 0px 0px 1px 0px;
    border-color: #eeeeee;
    padding: 5px;
}
#main {
    width: 100%;
    background-color: #ffffff;
    min-height: 1000px;
}
#footer {
    width: 100%;
    background-color: #fdfdfd;
    border-style: solid;
    border-width: 1px 0px 0px 0px;
    border-color: #eeeeee;
}
#title {
    font-size: 40px;
}
.align-center {
    display: flex;
    flex-direction: column;
    align-items: center;
}
.just-center {
    display: flex;
    justify-content: center;
}
.width-limit {
    min-width: 800px;
    max-width: 1600px;
}
.inline {
    display: inline-block;
}
</style>

<body class="align-center">
    <div id="header" class="just-center">
        <div class="width-limit">
            <div id="title" class="inline"><b>{{.Title}}</b></div>
            <a href="/edit/{{.Title}}">edit</a>
            <a href="/history/{{.Title}}">history</a>
        </div>
    </div>

    <div id="main" class="just-center">
        <div class="width-limit">
        {{.HTML}}
        </div>
    </div>

    <div id="footer" class="just-center">
        <p>Sample Footer</p>
    </div>
<body>
</html>
`)})
}
